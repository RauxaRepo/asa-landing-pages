
// PLACEHOLDER 
// ===========
// sass-lint:disable no-vendor-prefixes
@mixin placeholder {
  $placeholders: ':-webkit-input' ':-moz' '-moz' '-ms-input';
  @each $placeholder in $placeholders {
    &:#{$placeholder}-placeholder {
      @content;
    }
  }
}

// HOW TO USE :

// input {
//   @include placeholder {
//     /* styles for placeholder here */
//   }
// }

// ===========


// TRANSPARENT COLOR 
// ===========
@function transparent-color ($color, $opacity) {
  $trans-color: rgba($color, $opacity);
  @return $trans-color;
}

// HOW TO USE :

// div {
//  background-color: transparent-color($black, .5);
// }

// ===========



// FONT TO REM
// ===========

@function calculate-rem($size) {
  $rem-size: $size / $base-fontsize;
  @return #{$rem-size}rem;
}

@mixin font-size($size) {
  font-size: calculate-rem($size);
}

// HOW TO USE:

// p {
//  @include font-size(16px);
// }

// ===========




// BREAKPOINT
// ==========
@mixin bp($breakpoint) {

  @if map-has-key($breakpoints, $breakpoint) {

    @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }

  } @else {
    @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.';
  }
}

// HOW TO USE:

// div {
//  @include bp(medium) {
//    your css...
//  }
// }

// ===========

